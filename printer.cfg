[stepper_x]
step_pin: P2.2
dir_pin: !P2.6
enable_pin: !P2.1
endstop_pin: P1.29
position_endstop: -10
position_min: -10
position_max: 220
homing_speed: 20
microsteps: 16
rotation_distance: 40

[tmc2209 stepper_x]
uart_pin: P1.10
run_current: 0.650
hold_current: 0.325
stealthchop_threshold: 999999

[stepper_y]
step_pin: P0.19
dir_pin: !P0.20
enable_pin: !P2.8
endstop_pin: P1.28
position_endstop: -20
position_min: -20
position_max: 200
homing_speed: 20
microsteps: 16
rotation_distance: 40

[tmc2209 stepper_y]
uart_pin: P1.9
run_current: 0.650
hold_current: 0.325
stealthchop_threshold: 999999

[stepper_z]
step_pin: P0.22
dir_pin: P2.11
enable_pin: !P0.21
endstop_pin: probe:z_virtual_endstop
position_min: -5
position_max: 250
homing_speed: 5
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z]
uart_pin: P1.8
run_current: 0.580
hold_current: 0.290

[stepper_z1]
step_pin: P1.15
dir_pin: P1.14
enable_pin: !P1.16
microsteps: 16
rotation_distance: 8

[tmc2209 stepper_z1]
uart_pin: P1.1
run_current: 0.580
hold_current: 0.290

[extruder]
step_pin: P2.13
dir_pin: P0.11
enable_pin: !P2.12
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: P2.7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.24
control: pid
pid_Kp: 18.152
pid_Ki: 0.781
pid_Kd: 105.506
min_temp: 0
max_temp: 280
max_extrude_only_distance: 600
microsteps: 16
rotation_distance: 3.4334

[tmc2209 extruder]
uart_pin: P1.4
run_current: 0.800
hold_current: 0.400

[heater_bed]
heater_pin: P2.5
sensor_type: EPCOS 100K B57560G104F
sensor_pin: P0.25
control: pid
pid_Kp: 74.417
pid_Ki: 1.632
pid_Kd: 848.350
min_temp: 0
max_temp: 125

[fan]
pin: P2.3

[heater_fan extruder_fan]
pin: P2.4
heater: extruder
heater_temp: 50.0
fan_speed: 1.0

[mcu]
serial: /dev/serial/by-id/usb-Klipper_lpc1768_20F0FF10A0A447AF77BB155DC02000F5-if00

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 3000
max_z_velocity: 5
max_z_accel: 100

[display]
lcd_type: st7920
encoder_pins: ^P1.20, ^P1.18
click_pin: ^!P0.28
cs_pin: P1.22
sid_pin: P1.23
sclk_pin: P1.21

[output_pin beeper]
pin: P1.30

[bltouch]
sensor_pin: P1.27
control_pin: P2.0
x_offset: -40
y_offset: 0
z_offset: 3.05
set_output_mode: 5V
samples: 2
sample_retract_dist: 10
samples_tolerance_retries: 1

[bed_mesh]
mesh_min: 45,0
mesh_max: 180,200
probe_count: 3,3
horizontal_move_z: 10

[safe_z_home]
home_xy_position: 150,100
z_hop: 10.0
z_hop_speed: 5

[z_tilt]
z_positions:
  -40,100
  260,100
points:
  85,100
  220,100
horizontal_move_z: 10
retries: 10
retry_tolerance: 0.01

# [screws_tilt_adjust]
# screw1: -7,16
# screw1_name: Front left screw
# screw2: -7,171
# screw2_name: Rear left screw
# screw3: 152,16
# screw3_name: Front right screw
# screw4: 152,171
# screw4_name: Rear right screw
# horizontal_move_z: 10
# speed: 100
# screw_thread: CW-M3

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[gcode_arcs]

[pause_resume]

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

[delayed_gcode delayed_printer_off]
initial_duration: 0.
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

[idle_timeout]
gcode:
  M84
  TURN_OFF_HEATERS
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=60

[gcode_macro G29]
gcode:
    BED_MESH_CALIBRATE

[gcode_macro G34]
gcode:
    Z_TILT_ADJUST
